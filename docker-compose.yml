version: '3.4'

# Cada servicio requiere un contenedor
services:
 # Servicio Phpmyadmin
  phpmyadmin:
    # Imagen Docker
    image: phpmyadmin
    # Entorno empleado. Ver anexo al final del documento.
    environment:
        - PMA_ARBITRARY=1
    # Redirección de puertos. 
    ports:
        - 8080:80
    # Redes empleadas
    networks:
        - frontend-network
        - backend-network
    # Establecemos dependencias
    depends_on:
        - mysql
    # Si hay fallo en el servicio, se reinicia.
    restart: always

    # Servicio MySQL. Esta vez usaremos variables de entorno.
  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE={MYSQL_DATABASE}
        - MYSQL_USER={MYSQL_USER}
        - MYSQL_PASSWORD={MYSQL_PASSWORD}
    volumes:
        - mysql_data:/var/lib/mysql
    networks:
        - backend-network
    restart: always

    # Servicio Prestashop. Depende de la base de datos.
  prestashop:
    image: wordpress
    ports:
        - "80:80"
    environment:
        - DB_SERVER=${DB_SERVER}
    volumes:
        - prestashop_data:/var/www/html
    networks:
        - frontend-network
        - backend-network
    restart: always
    depends_on:
        - mysql

# Definimos las dos redes necesarias. Ojo con la indentación
networks:
    frontend-network:
    backend-network:

# Definimos los volúmenes disponibles
volumes:    
    mysql_data:
    prestashop_data:



## Anexo: sobre 'PMA' (PhpMyAdmin)##

# Podemos fijar dos variables de entorno. PMA_HOST y PMA_ARBITRARY=1
# PMA_HOST nos permite indicar el nombre del contenedor con el que quiero conectarme desde phpMyAdmin.
# PMA_ARBITRARY=1 nos ofrecerá un cuadro de texto en el login de phpMyAdmin, indicando el nombre del contenedor al que quieres conectarte.
